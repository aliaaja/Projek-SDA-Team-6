class Kendaraan:
    def __init__(self, id_kendaraan, jenis_kendaraan, nama_driver, kapasitas, ketersediaan):
        self.id_kendaraan = id_kendaraan
        self.jenis_kendaraan = jenis_kendaraan
        self.nama_driver = nama_driver
        self.kapasitas = kapasitas
        self.ketersediaan = ketersediaan

    def __str__(self):
        return f"ID: {self.id_kendaraan}, Jenis: {self.jenis_kendaraan}, Driver: {self.nama_driver}, Kapasitas: {self.kapasitas}, Tersedia: {self.ketersediaan}"

class PemesananKendaraan:
    def __init__(self, id_pemesanan, nama_pelanggan, id_kendaraan, lokasi_jemput, lokasi_tujuan):
        self.id_pemesanan = id_pemesanan
        self.nama_pelanggan = nama_pelanggan
        self.id_kendaraan = id_kendaraan
        self.lokasi_jemput = lokasi_jemput
        self.lokasi_tujuan = lokasi_tujuan

    def __str__(self):
        return f"ID Pemesanan: {self.id_pemesanan}, Pelanggan: {self.nama_pelanggan}, ID Kendaraan: {self.id_kendaraan}, Jemput: {self.lokasi_jemput}, Tujuan: {self.lokasi_tujuan}"

class ManajemenKendaraan:
    def __init__(self):
        self.list_kendaraan = []

    def daftar_kendaraan(self):
        if not self.list_kendaraan:
            return None
        return "\n".join(str(kendaraan) for kendaraan in self.list_kendaraan)

def update_kendaraan(self, id_kendaraan, jenis_kendaraan=None, nama_driver=None, kapasitas=None, ketersediaan=None):
        for kendaraan in self.list_kendaraan:
            if kendaraan.id_kendaraan == id_kendaraan:
                if jenis_kendaraan:
                    kendaraan.jenis_kendaraan = jenis_kendaraan
                if nama_driver:
                    kendaraan.nama_driver = nama_driver
                if kapasitas is not None:
                    kendaraan.kapasitas = kapasitas
                if ketersediaan is not None:
                    kendaraan.ketersediaan = ketersediaan
                messagebox.showinfo("Berhasil", f"Kendaraan {id_kendaraan} berhasil diperbarui.")
                return
        messagebox.showwarning("Error", f"Tidak ada kendaraan dengan ID {id_kendaraan}")

def hapus_kendaraan(self, id_kendaraan):
        for kendaraan in self.list_kendaraan:
            if kendaraan.id_kendaraan == id_kendaraan:
                self.list_kendaraan.remove(kendaraan)
                messagebox.showinfo("Berhasil", f"Kendaraan {id_kendaraan} berhasil dihapus.")
                return
        messagebox.showwarning("Error", f"Tidak ada kendaraan dengan ID {id_kendaraan}")

def tambah_kendaraan(self, id_kendaraan, jenis_kendaraan, nama_driver, kapasitas, ketersediaan):
        for kendaraan in self.list_kendaraan:
            if kendaraan.id_kendaraan == id_kendaraan:
                messagebox.showwarning("Error", f"Kendaraan dengan ID {id_kendaraan} sudah ada.")
                return
        kendaraan_baru = Kendaraan(id_kendaraan, jenis_kendaraan, nama_driver, kapasitas, ketersediaan)
        self.list_kendaraan.append(kendaraan_baru)
        messagebox.showinfo("Berhasil", f"Kendaraan {id_kendaraan} berhasil ditambahkan.")
